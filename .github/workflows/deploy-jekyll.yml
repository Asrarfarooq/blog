name: Deploy Jekyll Blog to GitHub Pages

on:
  # Runs on pushes targeting the default branch (main or master)
  push:
    branches: ["main"] # Adjust if your default branch is different (e.g., "master")

  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-blog-${{ github.ref }}" # Unique group per branch for blog repo
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1" # Or a Ruby version compatible with your Jekyll setup
          bundler-cache: true # Runs 'bundle install' and caches gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Uses a GITHUB_TOKEN for Jekyll build to enable GH Pages related features
        # and outputs the site to a specific directory (./_site by default)
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
